create table if not exists mpa (
    mpa_id integer generated by default as identity primary key,
    name varchar
);

create table if not exists films (
  film_id integer generated by default as identity primary key,
  name varchar,
  description varchar,
  releaseDate date,
  duration integer,
  mpa_id integer,
  foreign key (mpa_id) references mpa (mpa_id)
          on update cascade
          on delete cascade
);


create table if not exists genre (
    genre_id integer generated by default as identity primary key,
    name varchar
);

create table if not exists film_genre (
    film_id integer,
    genre_id integer,
    foreign key (film_id) references films (film_id)
        on update cascade
        on delete cascade,
    foreign key (genre_id) references genre (genre_id)
        on update cascade
        on delete cascade,
    Constraint PK_genre primary Key (film_id, genre_id)
);

create table if not exists clients (
    user_id integer generated by default as identity primary key,
    email varchar,
    login varchar,
    name varchar,
    birthday date
);

create table if not exists friendship (
    first_user_id integer,
    second_user_id integer,
    foreign key (first_user_id) references clients (user_id)
            on update cascade
            on delete cascade,
    foreign key (second_user_id) references clients (user_id)
            on update cascade
            on delete cascade,
    primary key (first_user_id, second_user_id)
);

create table if not exists likes (
    film_id integer,
    user_id integer,
    foreign key (film_id) references films (film_id)
                on update cascade
                on delete cascade,
    foreign key (user_id) references clients (user_id)
                on update cascade
                on delete cascade,
    primary key (film_id, user_id)
);